{
  "instrumentation": {
    "javax.jms": {
      "description": "Javax JMS instrumentation",
      "rules": [{
        "ruleName": "JMS Consumer Start",
        "notes": [
          "Need to check if already active, as Hornetq results in multiple layers of onMessage being called"
        ],
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "ENTRY",
        "condition": "!isActive() && !isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && activate($1.getJMSDestination(),null,$1.getStringProperty(\"Hawkularbtid\"))",
        "actions": [{
          "type": "SetBusinessTransaction",
          "nameExpression": "$1.getStringProperty(\"Hawkularbtname\")"
        },{
          "type": "SetLevel",
          "levelExpression": "$1.getStringProperty(\"Hawkularbtlevel\")"
        },{
          "type": "InstrumentConsumer",
          "direction": "In",
          "endpointTypeExpression": "\"MOM\"",
          "uriExpression": "$1.getJMSDestination()",
          "idExpression": "$1.getStringProperty(\"Hawkularbtid\")"
        },{
          "type": "ProcessHeaders",
          "direction": "In",
          "originalType": "javax.jms.Message",
          "headersExpression": "$1"
        },{
          "type": "SetDetail",
          "name": "apm_source",
          "valueExpression": "\"javax.jms\""
        }]
      },{
        "ruleName": "JMS Consumer Start TextMessage",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "ENTRY",
        "condition": "isActive() && !isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isInstanceOf($1,javax.jms.TextMessage.class)",
        "binds": [{
          "name": "message",
          "type": "javax.jms.TextMessage",
          "expression": "$1"
        }],
        "actions": [{
          "type": "ProcessContent",
          "direction": "In",
          "valueExpressions": [
            "message.getText().getBytes()"
          ]
        }]
      },{
        "ruleName": "Javax JMS Consumer Sync End",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "EXIT",
        "condition": "($1.getJMSReplyTo() == null || !isInstanceOf($1.getJMSReplyTo(),javax.jms.TemporaryQueue.class)) && !isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "InstrumentConsumer",
          "direction": "Out",
          "endpointTypeExpression": "\"MOM\"",
          "uriExpression": "$1.getJMSDestination()"
        },{
          "type": "AssertComplete"
        }]
      },{
        "ruleName": "Javax JMS Consumer Async Initial Thread End",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "EXIT",
        "condition": "isInstanceOf($1.getJMSReplyTo(),javax.jms.TemporaryQueue.class) && !isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "Unlink"
        }]
      },{
        "ruleName": "Javax JMS Consumer End After TmpQ Reply TextMessage",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "isInstanceOf($1,javax.jms.TemporaryQueue.class) && isActive() && isInstanceOf($2,javax.jms.TextMessage.class)",
        "binds": [{
          "name": "message",
          "type": "javax.jms.TextMessage",
          "expression": "$2"
        }],
        "actions": [{
          "type": "ProcessContent",
          "direction": "Out",
          "valueExpressions": [
            "message.getText().getBytes()"
          ]
        }]
      },{
        "ruleName": "Javax JMS Consumer End After TmpQ Reply",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "isInstanceOf($1,javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "InstrumentConsumer",
          "direction": "Out",
          "endpointTypeExpression": "\"MOM\""
        },{
          "type": "AssertComplete"
        }]
      },{
        "ruleName": "Javax JMS Producer Sync Start",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "$2.getJMSReplyTo() == null && !isInstanceOf($1,javax.jms.TemporaryQueue.class) && activate($1,null)",
        "binds": [{
          "name": "id",
          "type": "java.lang.String",
          "expression": "createUUID()"
        }],
        "actions": [{
          "type": "InstrumentProducer",
          "direction": "In",
          "endpointTypeExpression": "\"MOM\"",
          "idExpression": "id",
          "uriExpression": "$1"
        },{
          "type": "ProcessHeaders",
          "direction": "In",
          "originalType": "javax.jms.Message",
          "headersExpression": "$2"
        },{
          "type": "SetDetail",
          "name": "apm_source",
          "valueExpression": "\"javax.jms\""
        },{
          "type": "SetDetail",
          "name": "apm_publish",
          "valueExpression": "isInstanceOf($1,javax.jms.Topic.class)"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtid\",id)"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtname\",getBusinessTransactionName())"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtlevel\",getLevel())"
        }]
      },{
        "ruleName": "JMS Producer Sync Start TextMessage",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "$2.getJMSReplyTo() == null && isActive() && !isInstanceOf($1,javax.jms.TemporaryQueue.class) && isInstanceOf($2,javax.jms.TextMessage.class)",
        "binds": [{
          "name": "message",
          "type": "javax.jms.TextMessage",
          "expression": "$2"
        }],
        "actions": [{
          "type": "ProcessContent",
          "direction": "In",
          "valueExpressions": [
            "message.getText().getBytes()"
          ]
        }]
      },{
        "ruleName": "Javax JMS Producer Async Start",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "$2.getJMSReplyTo() != null && !isInstanceOf($1,javax.jms.TemporaryQueue.class) && activate($1,null)",
        "binds": [{
          "name": "id",
          "type": "java.lang.String",
          "expression": "createUUID()"
        }],
        "actions": [{
          "type": "InstrumentProducer",
          "direction": "In",
          "endpointTypeExpression": "\"MOM\"",
          "idExpression": "id",
          "uriExpression": "$1"
        },{
          "type": "ProcessHeaders",
          "direction": "In",
          "originalType": "javax.jms.Message",
          "headersExpression": "$2"
        },{
          "type": "SetDetail",
          "name": "apm_source",
          "valueExpression": "\"javax.jms\""
        },{
          "type": "SetDetail",
          "name": "apm_publish",
          "valueExpression": "isInstanceOf($1,javax.jms.Topic.class)"
        },{
          "type": "InitiateCorrelation",
          "idExpression": "$2.getJMSReplyTo()"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtid\",id)"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtname\",getBusinessTransactionName())"
        },{
          "type": "FreeFormAction",
          "action": "$2.setStringProperty(\"Hawkularbtlevel\",getLevel())"
        }]
      },{
        "ruleName": "JMS Producer Async Start TextMessage",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "ENTRY",
        "condition": "$2.getJMSReplyTo() != null && !isInstanceOf($1,javax.jms.TemporaryQueue.class) && isActive() && isInstanceOf($2,javax.jms.TextMessage.class)",
        "binds": [{
          "name": "message",
          "type": "javax.jms.TextMessage",
          "expression": "$2"
        }],
        "actions": [{
          "type": "ProcessContent",
          "direction": "In",
          "valueExpressions": [
            "message.getText().getBytes()"
          ]
        }]
      },{
        "ruleName": "Javax JMS Producer Sync End",
        "interfaceName": "^javax.jms.MessageProducer",
        "methodName": "send",
        "parameterTypes": [
          "javax.jms.Destination",
          "javax.jms.Message",
          "int",
          "int",
          "long"
        ],
        "location": "EXIT",
        "condition": "$2.getJMSReplyTo() == null && !isInstanceOf($1,javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "InstrumentProducer",
          "direction": "Out",
          "endpointTypeExpression": "\"MOM\"",
          "uriExpression": "$1"
        }]
      },{
        "ruleName": "Javax JMS Producer Async End Correlate",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "ENTRY",
        "condition": "isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isCorrelated($1.getJMSDestination())",
        "actions": [{
          "type": "CompleteCorrelation",
          "idExpression": "$1.getJMSDestination()"
        }]
      },{
        "ruleName": "Javax JMS Producer Async End TextMessage",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "ENTRY",
        "condition": "isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isActive() && isInstanceOf($1,javax.jms.TextMessage.class)",
        "binds": [{
          "name": "message",
          "type": "javax.jms.TextMessage",
          "expression": "$1"
        }],
        "actions": [{
          "type": "ProcessContent",
          "direction": "Out",
          "valueExpressions": [
            "message.getText().getBytes()"
          ]
        }]
      },{
        "ruleName": "Javax JMS Producer Async End",
        "notes": [
          "Instrumenting the 'out' direction for the producer, after separate rules for doing the correlation, to enable the check for the message content to be performed"
        ],
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "ENTRY",
        "condition": "isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "InstrumentProducer",
          "direction": "Out",
          "endpointTypeExpression": "\"MOM\""
        }]
      },{
        "ruleName": "Javax JMS Producer Async Response Thread Complete",
        "interfaceName": "^javax.jms.MessageListener",
        "methodName": "onMessage",
        "parameterTypes": [
          "javax.jms.Message"
        ],
        "location": "EXIT",
        "condition": "isInstanceOf($1.getJMSDestination(),javax.jms.TemporaryQueue.class) && isActive()",
        "actions": [{
          "type": "Unlink"
        }]
      }]
    }
  }
}
