#
# Copyright 2015 Red Hat, Inc. and/or its affiliates
# and other contributors as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

RULE JMS Async/Sync Consumer Start
INTERFACE ^javax.jms.MessageListener
METHOD onMessage(javax.jms.Message)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT ENTRY
IF TRUE
DO
  System.out.println("CONSUMER START: "+Thread.currentThread()+" dest="+$1.getJMSDestination());
ENDRULE


RULE JMS Sync Consumer End
INTERFACE ^javax.jms.MessageListener
METHOD onMessage(javax.jms.Message)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT EXIT
IF $1.getJMSReplyTo() == null
DO
  System.out.println("CONSUMER END: "+Thread.currentThread()+" dest="+$1.getJMSDestination());
ENDRULE

# NEW RULE
RULE JMS Async Consumer End
INTERFACE ^javax.jms.MessageProducer
METHOD send(javax.jms.Destination,javax.jms.Message,int,int,long)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT ENTRY
IF isInstanceOf($1,javax.jms.TemporaryQueue.class)
DO
  System.out.println("CONSUMER END (async): "+Thread.currentThread()+" dest="+$1+" mesg="+$2)
ENDRULE


RULE JMS Async/Sync Producer Start
INTERFACE ^javax.jms.MessageProducer
METHOD send(javax.jms.Destination,javax.jms.Message,int,int,long)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT ENTRY
IF !isInstanceOf($1,javax.jms.TemporaryQueue.class)      # CHANGE
DO
  System.out.println("PRODUCER START: "+Thread.currentThread()+" dest="+$1+" replyTo="+$2.getJMSReplyTo()+" mesg="+$2);
  System.out.println("  RETAIN NODE 'jmsProducer'");
ENDRULE


RULE JMS Sync Producer End
INTERFACE ^javax.jms.MessageProducer
METHOD send(javax.jms.Destination,javax.jms.Message,int,int,long)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT EXIT
IF $2.getJMSReplyTo() == null
DO
  System.out.println("PRODUCER END (sync): "+Thread.currentThread()+" dest="+$1+" mesg="+$2);
ENDRULE


RULE JMS Producer Set Identifier
INTERFACE ^javax.jms.MessageProducer
METHOD send(javax.jms.Destination,javax.jms.Message,int,int,long)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT EXIT
IF !isInstanceOf($1,javax.jms.TemporaryQueue.class)
DO
  System.out.println("   RETRIEVE NODE - add correlation id="+$2.getJMSMessageID());
  System.out.println("   RELEASE NODE 'jmsProducer'");
ENDRULE


RULE JMS Async Producer End
INTERFACE ^javax.jms.MessageConsumer
METHOD receive(long)
HELPER org.hawkular.btm.client.manager.RuleHelper
AT EXIT
IF $! != null
DO
  System.out.println("PRODUCER END (async): "+Thread.currentThread()+" dest="+$!.getJMSDestination()+" mesg="+$!);
ENDRULE
